{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ethan\\\\OneDrive\\\\newtnotes\\\\client\\\\pages\\\\journal.js\";\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport ReactHtmlParser from 'react-html-parser';\n\nvar Journal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Journal, _Component);\n\n  function Journal(props) {\n    var _this;\n\n    _classCallCheck(this, Journal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Journal).call(this, props));\n    _this.state = {\n      journals: []\n    };\n    return _this;\n  }\n\n  _createClass(Journal, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var rawResponse, journal;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('fetching journals...');\n                _context.next = 3;\n                return window.fetch('http://localhost:3001/journal', {\n                  method: 'GET'\n                });\n\n              case 3:\n                rawResponse = _context.sent;\n                _context.next = 6;\n                return rawResponse.json();\n\n              case 6:\n                journal = _context.sent;\n                this.setState({\n                  journal: journal\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        title: \"Newtnotes | Journal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Journal\"), this.state.journals.map(function (journal) {\n        return ReactHtmlParser(journal);\n      })));\n    }\n  }]);\n\n  return Journal;\n}(Component);\n\nexport default Journal;","map":{"version":3,"sources":["C:\\Users\\Ethan\\OneDrive\\newtnotes\\client\\pages\\journal.js"],"names":["React","Component","Layout","ReactHtmlParser","Journal","props","state","journals","console","log","window","fetch","method","rawResponse","json","journal","setState","map"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;IAEMC,O;;;;;AACJ,mBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFkB;AAGnB;;;;;;;;;;;;;AAGCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;uBAC0BC,MAAM,CAACC,KAAP,CAAa,+BAAb,EAA8C;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAA9C,C;;;AAApBC,gBAAAA,W;;uBACgBA,WAAW,CAACC,IAAZ,E;;;AAAhBC,gBAAAA,O;AACN,qBAAKC,QAAL,CAAc;AAAED,kBAAAA,OAAO,EAAPA;AAAF,iBAAd;;;;;;;;;;;;;;;;;;6BAGQ;AACR,aACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEG,KAAKT,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwB,UAAAF,OAAO;AAAA,eAAIZ,eAAe,CAACY,OAAD,CAAnB;AAAA,OAA/B,CAFH,CADF,CADF;AAQD;;;;EAtBmBd,S;;AAyBtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Layout from '../components/Layout'\r\nimport ReactHtmlParser from 'react-html-parser'\r\n\r\nclass Journal extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { journals: [] }\r\n  }\r\n\r\n  async componentWillMount () {\r\n    console.log('fetching journals...')\r\n    const rawResponse = await window.fetch('http://localhost:3001/journal', { method: 'GET' })\r\n    const journal = await rawResponse.json()\r\n    this.setState({ journal })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Layout title='Newtnotes | Journal'>\r\n        <div>\r\n          <h1>Journal</h1>\r\n          {this.state.journals.map(journal => ReactHtmlParser(journal))}\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Journal\r\n"]},"metadata":{},"sourceType":"module"}